@use "sass:list";
@use "../../sass/assert";
@use "../../sass/true/messages";
@use "../../sass/true/modules";
@use "../../sass/true/tests";
@use "../../sass/true/utilities";

// Utility Tests
// =============

@include modules.test-module('True Error [function]') {
  @include tests.test('Allow errors to return without blocking compilation') {
    @include assert.assert-equal(
      utilities.error('This is a test error message', 'error test'),
      'ERROR [error test] This is a test error message'
    );
  }
}

@include modules.test-module('True Error [mixin]') {
  @include tests.test('Allow errors to output without blocking compilation') {
    @include assert.assert {
      @include assert.output {
        @include utilities.error(
          'This is a test error message',
          'error test'
        );
      }
      @include assert.expect {
        @include messages.message(
          'ERROR [error test] This is a test error message',
          'comments'
        );
      }
    }
  }
}

@include modules.test-module('Map Add [function]') {
  @include tests.test('Returns a map with the sum-values of two numeric maps') {
    $base: (
      one: 1,
      two: 1,
      three: 1,
    );
    $add: (
      one: 1,
      two: 2,
      three: -1,
    );

    $expect: (
      one: 2,
      two: 3,
      three: 0,
    );
    @include assert.assert-equal(utilities.map-increment($base, $add), $expect);
  }
}

@include modules.test-module('Join Multiple [function') {
  $one: ('one', 'two', 'three');
  $two: ('four' 'five' 'six');
  $three: ('seven', 'eight', 'nine');
  $joined: (
    'one',
    'two',
    'three',
    'four',
    'five',
    'six',
    'seven',
    'eight',
    'nine'
  );

  @include tests.test('Combines multiple lists') {
    @include assert.assert-equal(utilities.join-multiple($one, $two, $three), $joined);
  }

  @include tests.test('Sets new list-separator') {
    @include assert.assert-equal(
      utilities.join-multiple($one, $two, $three, 'space'),
      list.join((), $joined, 'space')
    );
  }
}
