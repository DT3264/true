@use "sass:map";
@use "messages";
@use "results";
@use "settings";
@use "stats";
@use "utilities";

// Final Reporting
// ===============


// Report
// ------
/// Report results summary to CSS
/// and (optionally) the command line
/// @access public
/// @group api-xreport
/// @param {bool} $terminal [$terminal-output] -
///   Optionally output results to the terminal
/// @param {bool} $fail-on-error [false] -
///   Optionally error out the compiler if tests have failed
/// @param {map} $results [$results] -
///   A map of run, pass, fail, and output-to-css results
/// @param {map} $stats [$stats] -
///   A map of module, test, and assertion statistics
/// @example scss
///   $terminal-output: false;
///   @include report;
@mixin report(
  $terminal: settings.$terminal-output,
  $fail-on-error: false,
  $results: results.$results,
  $stats: stats.$stats
) {
  $fail: map.get($results, 'fail');

  $run: map.get($results, 'run');
  $pass: map.get($results, 'pass');
  $fail: map.get($results, 'fail');
  $output: map.get($results, 'output-to-css');
  $total: $pass + $fail + $output;
  $tests: map.get($stats, 'tests');

  $comment: report-message('linebreak', $results, $stats);
  @include messages.message($comment, 'comments');

  @if $terminal {
    $debug: report-message(not 'linebreak', $results, $stats);
    @include messages.message($debug, 'debug');
  }

  @if ($run != $tests) or ($run != $total) {
    $error: 'The results donâ€™t add up. Are all your tests properly structured?';
    @include utilities.error($error, 'report');
  }

  @if $fail-on-error and ($fail > 0) {
    $plural: if(($fail == 1), 'test', 'tests');
    @include utilities.error('#{$fail} #{$plural} failed', 'report');
  }
}


// Report Message
// --------------
/// Report results summary to CSS
/// and (optionally) the command line
/// @access private
/// @group private-message
/// @param {bool} $linebreak [false] -
///   Return single-line messages for results/stats,
///   or optionally break into multi-line lists.
/// @param {map} $results [$results] -
///   A map of run, pass, fail, and output-to-css results
/// @param {map} $stats [$stats] -
///   A map of module, test, and assertion-counts in your project
@function report-message(
  $linebreak: false,
  $results: results.$results,
  $stats: stats.$stats
) {
  @if $linebreak {
    @return utilities.join-multiple(
      '# SUMMARY ----------',
      results.results-message('linebreak', $results),
      stats.stats-message('linebreak', $stats),
      '--------------------'
    );
  }

  $report: (
    results.results-message(null, $results),
    stats.stats-message(null, $stats),
  );

  @return $report;
}
